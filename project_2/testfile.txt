Языки интерпретирующего типа, не связывают жестко переменную с тем набором значений, которая она может принимать. Это означает, что в ходе выполнения программа одной и той же переменной может быть сначала присвоено числовое значения, переменная будет иметь числовой тип, затем ей может быть присвоено символьное значение, переменная станет символьного типа. Такие языки (например, используемый при программировании Web-страниц язык JavaScript) называют языками со свободной типизацией (loose typed language). 
Язык программирования Java, как и другие языки компилирующего типа (например, C/C++), является языком со строгой типизацией (strongly typed language). Это означает, что каждая переменная и каждое выражение имеют тип, который должен быть известен во время компиляции программы. Тип ограничивает набор значений, которые могут быть присвоены переменной, либо получены в выражении, ограничивает операции над значениями и определяет реализацию конкретной операции.
В Java определено две категории данных: 
•	примитивные типы (primitive types);
•	ссылочные типы (reference types). 
Существует также специальный нулевой тип, тип выражения null, который не имеет имени.
Объявление переменных (за исключением массивов) в Java имеет следующий вид:
имя-типа идентификатор-переменной;
Если несколько переменных имеют один и тот же тип, их можно объявить в одном предложении, перечислив идентификаторы переменных через запятую:
имя-типа идентификатор-переменной-1, идентификатор-переменной-2,.
В отличие от языка C, во внутреннем блоке нельзя объявлять переменную с таким же именем, как во внешней области действия. Поэтому следующий фрагмент программы 
int x = 1;
{              
       	int x = 2; // Ошибка компиляции
}
приведет к ошибке при компиляции программы (в C каждая переменная x была бы действительна только в своем блоке).
Модификатор public определяет, что переменная доступна как внутри, так и вне класса, переменная является глобальной и доступна любому другому объекту.
Так, если переменная publicVariable в классе A1Class пакета packet1 объявлена с модификатором public:
public int publicVariable;
то она доступна и в классе B1Class пакета packet2.
Модификатор private, наоборот, означает, что переменная доступна только в том классе, в котором она была объявлена.
Модификатор final определяет, что переменная имеет постоянное (неизменное) значение и не может быть переопределена. Так, при попытке изменить значение переменной PI, объявленной как
public final PI = 3.14;
будет выдано сообщение об ошибке, и выполнение программы будет прекращено.
